#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TuVanKhamBenh.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	using System.ComponentModel.DataAnnotations;

	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "HYK")]
	public partial class HYKDataContext : System.Data.Linq.DataContext
	{

		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

		#region Extensibility Method Definitions
		partial void OnCreated();
		partial void InsertBenh(Benh instance);
		partial void UpdateBenh(Benh instance);
		partial void DeleteBenh(Benh instance);
		partial void InsertChiPhiBenh(ChiPhiBenh instance);
		partial void UpdateChiPhiBenh(ChiPhiBenh instance);
		partial void DeleteChiPhiBenh(ChiPhiBenh instance);
		partial void InsertChuanDoan(ChuanDoan instance);
		partial void UpdateChuanDoan(ChuanDoan instance);
		partial void DeleteChuanDoan(ChuanDoan instance);
		partial void InsertThongTin(ThongTin instance);
		partial void UpdateThongTin(ThongTin instance);
		partial void DeleteThongTin(ThongTin instance);
		partial void InsertTrieuChung(TrieuChung instance);
		partial void UpdateTrieuChung(TrieuChung instance);
		partial void DeleteTrieuChung(TrieuChung instance);
		partial void InsertTrieuChungBenh(TrieuChungBenh instance);
		partial void UpdateTrieuChungBenh(TrieuChungBenh instance);
		partial void DeleteTrieuChungBenh(TrieuChungBenh instance);
		partial void InsertUserAccount(UserAccount instance);
		partial void UpdateUserAccount(UserAccount instance);
		partial void DeleteUserAccount(UserAccount instance);
		partial void InsertLichKham(LichKham instance);
		partial void UpdateLichKham(LichKham instance);
		partial void DeleteLichKham(LichKham instance);
		#endregion

		public HYKDataContext() :
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HYKConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}

		public HYKDataContext(string connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public HYKDataContext(System.Data.IDbConnection connection) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public HYKDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public HYKDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
				base(connection, mappingSource)
		{
			OnCreated();
		}

		public System.Data.Linq.Table<Benh> Benhs
		{
			get
			{
				return this.GetTable<Benh>();
			}
		}

		public System.Data.Linq.Table<ChiPhiBenh> ChiPhiBenhs
		{
			get
			{
				return this.GetTable<ChiPhiBenh>();
			}
		}

		public System.Data.Linq.Table<ChuanDoan> ChuanDoans
		{
			get
			{
				return this.GetTable<ChuanDoan>();
			}
		}

		public System.Data.Linq.Table<ThongTin> ThongTins
		{
			get
			{
				return this.GetTable<ThongTin>();
			}
		}

		public System.Data.Linq.Table<TrieuChung> TrieuChungs
		{
			get
			{
				return this.GetTable<TrieuChung>();
			}
		}

		public System.Data.Linq.Table<TrieuChungBenh> TrieuChungBenhs
		{
			get
			{
				return this.GetTable<TrieuChungBenh>();
			}
		}

		public System.Data.Linq.Table<UserAccount> UserAccounts
		{
			get
			{
				return this.GetTable<UserAccount>();
			}
		}

		public System.Data.Linq.Table<LichKham> LichKhams
		{
			get
			{
				return this.GetTable<LichKham>();
			}
		}

		[global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.SP_AccountCreate")]
		public int SP_AccountCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Username", DbType = "NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Password", DbType = "NVarChar(20)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Ten", DbType = "NVarChar(50)")] string ten, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Gmail", DbType = "VarChar(50)")] string gmail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, ten, gmail);
			return ((int)(result.ReturnValue));
		}

		[global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.SP_XSINFO")]
		public ISingleResult<SP_XSINFOResult> SP_XSINFO([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> tuoi, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(50)")] string cannang, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(50)")] string giong)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tuoi, cannang, giong);
			return ((ISingleResult<SP_XSINFOResult>)(result.ReturnValue));
		}

		[global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.SP_BenhCreate")]
		public int SP_BenhCreate([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Ten", DbType = "NVarChar(100)")] string ten)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ten);
			return ((int)(result.ReturnValue));
		}

		[global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.SP_ChuanDoan")]
		public ISingleResult<SP_ChuanDoanResult> SP_ChuanDoan([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "NVarChar(MAX)")] string key, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> info)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), key, info);
			return ((ISingleResult<SP_ChuanDoanResult>)(result.ReturnValue));
		}

		[global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.SP_DSChuanDoan")]
		public ISingleResult<SP_DSChuanDoanResult> SP_DSChuanDoan()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SP_DSChuanDoanResult>)(result.ReturnValue));
		}

		[global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.SP_Login")]
		public ISingleResult<SP_LoginResult> SP_Login([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Username", DbType = "VarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Password", DbType = "VarChar(20)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password);
			return ((ISingleResult<SP_LoginResult>)(result.ReturnValue));
		}

		[global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.SP_TCBenh")]
		public ISingleResult<SP_TCBenhResult> SP_TCBenh([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ID", DbType = "Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<SP_TCBenhResult>)(result.ReturnValue));
		}

		[global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.SP_ThemCD")]
		public int SP_ThemCD([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> idbenh, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Money")] System.Nullable<decimal> chiphi, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "VarChar(20)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idbenh, chiphi, username);
			return ((int)(result.ReturnValue));
		}

		[global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.SP_ThemCD1")]
		public int SP_ThemCD1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Int")] System.Nullable<int> idbenh, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType = "Money")] System.Nullable<decimal> chiphi)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idbenh, chiphi);
			return ((int)(result.ReturnValue));
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Benh")]
	public partial class Benh : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _Ten;

		private System.Nullable<int> _Slg;

		private EntitySet<ChiPhiBenh> _ChiPhiBenhs;

		private EntitySet<ChuanDoan> _ChuanDoans;

		private EntitySet<TrieuChungBenh> _TrieuChungBenhs;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnTenChanging(string value);
		partial void OnTenChanged();
		partial void OnSlgChanging(System.Nullable<int> value);
		partial void OnSlgChanged();
		#endregion

		public Benh()
		{
			this._ChiPhiBenhs = new EntitySet<ChiPhiBenh>(new Action<ChiPhiBenh>(this.attach_ChiPhiBenhs), new Action<ChiPhiBenh>(this.detach_ChiPhiBenhs));
			this._ChuanDoans = new EntitySet<ChuanDoan>(new Action<ChuanDoan>(this.attach_ChuanDoans), new Action<ChuanDoan>(this.detach_ChuanDoans));
			this._TrieuChungBenhs = new EntitySet<TrieuChungBenh>(new Action<TrieuChungBenh>(this.attach_TrieuChungBenhs), new Action<TrieuChungBenh>(this.detach_TrieuChungBenhs));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		[DisplayName("Mã")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ten", DbType = "NVarChar(100)")]

		[DisplayName("Tên bệnh")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Slg", DbType = "Int")]
		public System.Nullable<int> Slg
		{
			get
			{
				return this._Slg;
			}
			set
			{
				if ((this._Slg != value))
				{
					this.OnSlgChanging(value);
					this.SendPropertyChanging();
					this._Slg = value;
					this.SendPropertyChanged("Slg");
					this.OnSlgChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Benh_ChiPhiBenh", Storage = "_ChiPhiBenhs", ThisKey = "ID", OtherKey = "IDBenh")]
		public EntitySet<ChiPhiBenh> ChiPhiBenhs
		{
			get
			{
				return this._ChiPhiBenhs;
			}
			set
			{
				this._ChiPhiBenhs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Benh_ChuanDoan", Storage = "_ChuanDoans", ThisKey = "ID", OtherKey = "IDBenh")]
		public EntitySet<ChuanDoan> ChuanDoans
		{
			get
			{
				return this._ChuanDoans;
			}
			set
			{
				this._ChuanDoans.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Benh_TrieuChungBenh", Storage = "_TrieuChungBenhs", ThisKey = "ID", OtherKey = "IDBenh")]
		public EntitySet<TrieuChungBenh> TrieuChungBenhs
		{
			get
			{
				return this._TrieuChungBenhs;
			}
			set
			{
				this._TrieuChungBenhs.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_ChiPhiBenhs(ChiPhiBenh entity)
		{
			this.SendPropertyChanging();
			entity.Benh = this;
		}

		private void detach_ChiPhiBenhs(ChiPhiBenh entity)
		{
			this.SendPropertyChanging();
			entity.Benh = null;
		}

		private void attach_ChuanDoans(ChuanDoan entity)
		{
			this.SendPropertyChanging();
			entity.Benh = this;
		}

		private void detach_ChuanDoans(ChuanDoan entity)
		{
			this.SendPropertyChanging();
			entity.Benh = null;
		}

		private void attach_TrieuChungBenhs(TrieuChungBenh entity)
		{
			this.SendPropertyChanging();
			entity.Benh = this;
		}

		private void detach_TrieuChungBenhs(TrieuChungBenh entity)
		{
			this.SendPropertyChanging();
			entity.Benh = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ChiPhiBenh")]
	public partial class ChiPhiBenh : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private int _IDBenh;

		private System.Nullable<int> _Info;

		private System.Nullable<decimal> _ChiPhi;

		private EntityRef<Benh> _Benh;

		private EntityRef<ThongTin> _ThongTin;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnIDBenhChanging(int value);
		partial void OnIDBenhChanged();
		partial void OnInfoChanging(System.Nullable<int> value);
		partial void OnInfoChanged();
		partial void OnChiPhiChanging(System.Nullable<decimal> value);
		partial void OnChiPhiChanged();
		#endregion

		public ChiPhiBenh()
		{
			this._Benh = default(EntityRef<Benh>);
			this._ThongTin = default(EntityRef<ThongTin>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		[DisplayName("Mã")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDBenh", DbType = "Int NOT NULL")]
		[DisplayName("Mã bệnh")]
		public int IDBenh
		{
			get
			{
				return this._IDBenh;
			}
			set
			{
				if ((this._IDBenh != value))
				{
					if (this._Benh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDBenhChanging(value);
					this.SendPropertyChanging();
					this._IDBenh = value;
					this.SendPropertyChanged("IDBenh");
					this.OnIDBenhChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Info", DbType = "Int")]
		[DisplayName("Mã thông tin")]
		public System.Nullable<int> Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					if (this._ThongTin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ChiPhi", DbType = "Money")]
		[DisplayName("Chi phí")]
		[DisplayFormat(DataFormatString = "{0:C0}")]

		public System.Nullable<decimal> ChiPhi
		{
			get
			{
				return this._ChiPhi;
			}
			set
			{
				if ((this._ChiPhi != value))
				{
					this.OnChiPhiChanging(value);
					this.SendPropertyChanging();
					this._ChiPhi = value;
					this.SendPropertyChanged("ChiPhi");
					this.OnChiPhiChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Benh_ChiPhiBenh", Storage = "_Benh", ThisKey = "IDBenh", OtherKey = "ID", IsForeignKey = true, DeleteOnNull = true, DeleteRule = "CASCADE")]
		public Benh Benh
		{
			get
			{
				return this._Benh.Entity;
			}
			set
			{
				Benh previousValue = this._Benh.Entity;
				if (((previousValue != value)
							|| (this._Benh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Benh.Entity = null;
						previousValue.ChiPhiBenhs.Remove(this);
					}
					this._Benh.Entity = value;
					if ((value != null))
					{
						value.ChiPhiBenhs.Add(this);
						this._IDBenh = value.ID;
					}
					else
					{
						this._IDBenh = default(int);
					}
					this.SendPropertyChanged("Benh");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ThongTin_ChiPhiBenh", Storage = "_ThongTin", ThisKey = "Info", OtherKey = "ID", IsForeignKey = true, DeleteRule = "CASCADE")]
		public ThongTin ThongTin
		{
			get
			{
				return this._ThongTin.Entity;
			}
			set
			{
				ThongTin previousValue = this._ThongTin.Entity;
				if (((previousValue != value)
							|| (this._ThongTin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTin.Entity = null;
						previousValue.ChiPhiBenhs.Remove(this);
					}
					this._ThongTin.Entity = value;
					if ((value != null))
					{
						value.ChiPhiBenhs.Add(this);
						this._Info = value.ID;
					}
					else
					{
						this._Info = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTin");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ChuanDoan")]
	public partial class ChuanDoan : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private int _IDBenh;

		private System.Nullable<System.DateTime> _Ngay;

		private string _UserName;

		private System.Nullable<decimal> _ChiPhi;

		private EntityRef<Benh> _Benh;

		private EntityRef<UserAccount> _UserAccount;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnIDBenhChanging(int value);
		partial void OnIDBenhChanged();
		partial void OnNgayChanging(System.Nullable<System.DateTime> value);
		partial void OnNgayChanged();
		partial void OnUserNameChanging(string value);
		partial void OnUserNameChanged();
		partial void OnChiPhiChanging(System.Nullable<decimal> value);
		partial void OnChiPhiChanged();
		#endregion

		public ChuanDoan()
		{
			this._Benh = default(EntityRef<Benh>);
			this._UserAccount = default(EntityRef<UserAccount>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		[DisplayName("Mã")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDBenh", DbType = "Int NOT NULL")]
		[DisplayName("Mã bệnh")]
		public int IDBenh
		{
			get
			{
				return this._IDBenh;
			}
			set
			{
				if ((this._IDBenh != value))
				{
					if (this._Benh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDBenhChanging(value);
					this.SendPropertyChanging();
					this._IDBenh = value;
					this.SendPropertyChanged("IDBenh");
					this.OnIDBenhChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ngay", DbType = "Date")]
		[DisplayName("Ngày chuẩn đoán")]
		[DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserName", DbType = "VarChar(20)")]
		[DisplayName("Tên khách hàng")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					if (this._UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ChiPhi", DbType = "Money")]
		[DisplayName("Chi phí")]
		[DisplayFormat(DataFormatString = "{0:C0}")]
		public System.Nullable<decimal> ChiPhi
		{
			get
			{
				return this._ChiPhi;
			}
			set
			{
				if ((this._ChiPhi != value))
				{
					this.OnChiPhiChanging(value);
					this.SendPropertyChanging();
					this._ChiPhi = value;
					this.SendPropertyChanged("ChiPhi");
					this.OnChiPhiChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Benh_ChuanDoan", Storage = "_Benh", ThisKey = "IDBenh", OtherKey = "ID", IsForeignKey = true, DeleteOnNull = true, DeleteRule = "CASCADE")]
		public Benh Benh
		{
			get
			{
				return this._Benh.Entity;
			}
			set
			{
				Benh previousValue = this._Benh.Entity;
				if (((previousValue != value)
							|| (this._Benh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Benh.Entity = null;
						previousValue.ChuanDoans.Remove(this);
					}
					this._Benh.Entity = value;
					if ((value != null))
					{
						value.ChuanDoans.Add(this);
						this._IDBenh = value.ID;
					}
					else
					{
						this._IDBenh = default(int);
					}
					this.SendPropertyChanged("Benh");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "UserAccount_ChuanDoan", Storage = "_UserAccount", ThisKey = "UserName", OtherKey = "Username", IsForeignKey = true, DeleteRule = "CASCADE")]
		public UserAccount UserAccount
		{
			get
			{
				return this._UserAccount.Entity;
			}
			set
			{
				UserAccount previousValue = this._UserAccount.Entity;
				if (((previousValue != value)
							|| (this._UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAccount.Entity = null;
						previousValue.ChuanDoans.Remove(this);
					}
					this._UserAccount.Entity = value;
					if ((value != null))
					{
						value.ChuanDoans.Add(this);
						this._UserName = value.Username;
					}
					else
					{
						this._UserName = default(string);
					}
					this.SendPropertyChanged("UserAccount");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ThongTin")]
	public partial class ThongTin : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private System.Nullable<int> _Tuoi;

		private string _CanNang;

		private string _Giong;

		private EntitySet<ChiPhiBenh> _ChiPhiBenhs;

		private EntitySet<LichKham> _LichKhams;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnTuoiChanging(System.Nullable<int> value);
		partial void OnTuoiChanged();
		partial void OnCanNangChanging(string value);
		partial void OnCanNangChanged();
		partial void OnGiongChanging(string value);
		partial void OnGiongChanged();
		#endregion

		public ThongTin()
		{
			this._ChiPhiBenhs = new EntitySet<ChiPhiBenh>(new Action<ChiPhiBenh>(this.attach_ChiPhiBenhs), new Action<ChiPhiBenh>(this.detach_ChiPhiBenhs));
			this._LichKhams = new EntitySet<LichKham>(new Action<LichKham>(this.attach_LichKhams), new Action<LichKham>(this.detach_LichKhams));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		[DisplayName("Mã")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Tuoi", DbType = "Int")]
		[DisplayName("Tuối")]
		public System.Nullable<int> Tuoi
		{
			get
			{
				return this._Tuoi;
			}
			set
			{
				if ((this._Tuoi != value))
				{
					this.OnTuoiChanging(value);
					this.SendPropertyChanging();
					this._Tuoi = value;
					this.SendPropertyChanged("Tuoi");
					this.OnTuoiChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CanNang", DbType = "NVarChar(50)")]
		[DisplayName("Cân nặng")]
		public string CanNang
		{
			get
			{
				return this._CanNang;
			}
			set
			{
				if ((this._CanNang != value))
				{
					this.OnCanNangChanging(value);
					this.SendPropertyChanging();
					this._CanNang = value;
					this.SendPropertyChanged("CanNang");
					this.OnCanNangChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Giong", DbType = "NVarChar(50)")]
		[DisplayName("Giống")]
		public string Giong
		{
			get
			{
				return this._Giong;
			}
			set
			{
				if ((this._Giong != value))
				{
					this.OnGiongChanging(value);
					this.SendPropertyChanging();
					this._Giong = value;
					this.SendPropertyChanged("Giong");
					this.OnGiongChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ThongTin_ChiPhiBenh", Storage = "_ChiPhiBenhs", ThisKey = "ID", OtherKey = "Info")]
		public EntitySet<ChiPhiBenh> ChiPhiBenhs
		{
			get
			{
				return this._ChiPhiBenhs;
			}
			set
			{
				this._ChiPhiBenhs.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ThongTin_LichKham", Storage = "_LichKhams", ThisKey = "ID", OtherKey = "Info")]
		public EntitySet<LichKham> LichKhams
		{
			get
			{
				return this._LichKhams;
			}
			set
			{
				this._LichKhams.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_ChiPhiBenhs(ChiPhiBenh entity)
		{
			this.SendPropertyChanging();
			entity.ThongTin = this;
		}

		private void detach_ChiPhiBenhs(ChiPhiBenh entity)
		{
			this.SendPropertyChanging();
			entity.ThongTin = null;
		}

		private void attach_LichKhams(LichKham entity)
		{
			this.SendPropertyChanging();
			entity.ThongTin = this;
		}

		private void detach_LichKhams(LichKham entity)
		{
			this.SendPropertyChanging();
			entity.ThongTin = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TrieuChung")]
	public partial class TrieuChung : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private string _Ten;

		private EntitySet<TrieuChungBenh> _TrieuChungBenhs;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnTenChanging(string value);
		partial void OnTenChanged();
		#endregion

		public TrieuChung()
		{
			this._TrieuChungBenhs = new EntitySet<TrieuChungBenh>(new Action<TrieuChungBenh>(this.attach_TrieuChungBenhs), new Action<TrieuChungBenh>(this.detach_TrieuChungBenhs));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		[DisplayName("Mã")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ten", DbType = "NVarChar(50)")]
		[DisplayName("Tên triệu chứng")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "TrieuChung_TrieuChungBenh", Storage = "_TrieuChungBenhs", ThisKey = "ID", OtherKey = "IDTrieuChung")]
		public EntitySet<TrieuChungBenh> TrieuChungBenhs
		{
			get
			{
				return this._TrieuChungBenhs;
			}
			set
			{
				this._TrieuChungBenhs.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_TrieuChungBenhs(TrieuChungBenh entity)
		{
			this.SendPropertyChanging();
			entity.TrieuChung = this;
		}

		private void detach_TrieuChungBenhs(TrieuChungBenh entity)
		{
			this.SendPropertyChanging();
			entity.TrieuChung = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.TrieuChungBenh")]
	public partial class TrieuChungBenh : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private int _IDBenh;

		private int _IDTrieuChung;

		private EntityRef<Benh> _Benh;

		private EntityRef<TrieuChung> _TrieuChung;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnIDBenhChanging(int value);
		partial void OnIDBenhChanged();
		partial void OnIDTrieuChungChanging(int value);
		partial void OnIDTrieuChungChanged();
		#endregion

		public TrieuChungBenh()
		{
			this._Benh = default(EntityRef<Benh>);
			this._TrieuChung = default(EntityRef<TrieuChung>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		[DisplayName("Mã")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDBenh", DbType = "Int NOT NULL")]
		[DisplayName("Mã bệnh")]
		public int IDBenh
		{
			get
			{
				return this._IDBenh;
			}
			set
			{
				if ((this._IDBenh != value))
				{
					if (this._Benh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDBenhChanging(value);
					this.SendPropertyChanging();
					this._IDBenh = value;
					this.SendPropertyChanged("IDBenh");
					this.OnIDBenhChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDTrieuChung", DbType = "Int NOT NULL")]
		[DisplayName("Mã triệu chứng")]
		public int IDTrieuChung
		{
			get
			{
				return this._IDTrieuChung;
			}
			set
			{
				if ((this._IDTrieuChung != value))
				{
					if (this._TrieuChung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTrieuChungChanging(value);
					this.SendPropertyChanging();
					this._IDTrieuChung = value;
					this.SendPropertyChanged("IDTrieuChung");
					this.OnIDTrieuChungChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Benh_TrieuChungBenh", Storage = "_Benh", ThisKey = "IDBenh", OtherKey = "ID", IsForeignKey = true, DeleteOnNull = true, DeleteRule = "CASCADE")]
		public Benh Benh
		{
			get
			{
				return this._Benh.Entity;
			}
			set
			{
				Benh previousValue = this._Benh.Entity;
				if (((previousValue != value)
							|| (this._Benh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Benh.Entity = null;
						previousValue.TrieuChungBenhs.Remove(this);
					}
					this._Benh.Entity = value;
					if ((value != null))
					{
						value.TrieuChungBenhs.Add(this);
						this._IDBenh = value.ID;
					}
					else
					{
						this._IDBenh = default(int);
					}
					this.SendPropertyChanged("Benh");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "TrieuChung_TrieuChungBenh", Storage = "_TrieuChung", ThisKey = "IDTrieuChung", OtherKey = "ID", IsForeignKey = true, DeleteOnNull = true, DeleteRule = "CASCADE")]
		public TrieuChung TrieuChung
		{
			get
			{
				return this._TrieuChung.Entity;
			}
			set
			{
				TrieuChung previousValue = this._TrieuChung.Entity;
				if (((previousValue != value)
							|| (this._TrieuChung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrieuChung.Entity = null;
						previousValue.TrieuChungBenhs.Remove(this);
					}
					this._TrieuChung.Entity = value;
					if ((value != null))
					{
						value.TrieuChungBenhs.Add(this);
						this._IDTrieuChung = value.ID;
					}
					else
					{
						this._IDTrieuChung = default(int);
					}
					this.SendPropertyChanged("TrieuChung");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.UserAccount")]
	public partial class UserAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private string _Username;

		private string _Password;

		private string _Ten;

		private string _Gmail;

		private System.Nullable<bool> _Admin;

		private EntitySet<ChuanDoan> _ChuanDoans;

		private EntitySet<LichKham> _LichKhams;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnUsernameChanging(string value);
		partial void OnUsernameChanged();
		partial void OnPasswordChanging(string value);
		partial void OnPasswordChanged();
		partial void OnTenChanging(string value);
		partial void OnTenChanged();
		partial void OnGmailChanging(string value);
		partial void OnGmailChanged();
		partial void OnAdminChanging(System.Nullable<bool> value);
		partial void OnAdminChanged();
		#endregion

		public UserAccount()
		{
			this._ChuanDoans = new EntitySet<ChuanDoan>(new Action<ChuanDoan>(this.attach_ChuanDoans), new Action<ChuanDoan>(this.detach_ChuanDoans));
			this._LichKhams = new EntitySet<LichKham>(new Action<LichKham>(this.attach_LichKhams), new Action<LichKham>(this.detach_LichKhams));
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(20) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
		[DisplayName("Tên đăng nhập")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		[DisplayName("Mật khẩu")]
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Password", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ten", DbType = "NVarChar(50)")]
		[DisplayName("Tên người dùng")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Gmail", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
		[DisplayName("Gmail")]
		public string Gmail
		{
			get
			{
				return this._Gmail;
			}
			set
			{
				if ((this._Gmail != value))
				{
					this.OnGmailChanging(value);
					this.SendPropertyChanging();
					this._Gmail = value;
					this.SendPropertyChanged("Gmail");
					this.OnGmailChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Admin", DbType = "Bit")]
		[DisplayName("Quyền")]
		public System.Nullable<bool> Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "UserAccount_ChuanDoan", Storage = "_ChuanDoans", ThisKey = "Username", OtherKey = "UserName")]
		public EntitySet<ChuanDoan> ChuanDoans
		{
			get
			{
				return this._ChuanDoans;
			}
			set
			{
				this._ChuanDoans.Assign(value);
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "UserAccount_LichKham", Storage = "_LichKhams", ThisKey = "Username", OtherKey = "Username")]
		public EntitySet<LichKham> LichKhams
		{
			get
			{
				return this._LichKhams;
			}
			set
			{
				this._LichKhams.Assign(value);
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private void attach_ChuanDoans(ChuanDoan entity)
		{
			this.SendPropertyChanging();
			entity.UserAccount = this;
		}

		private void detach_ChuanDoans(ChuanDoan entity)
		{
			this.SendPropertyChanging();
			entity.UserAccount = null;
		}

		private void attach_LichKhams(LichKham entity)
		{
			this.SendPropertyChanging();
			entity.UserAccount = this;
		}

		private void detach_LichKhams(LichKham entity)
		{
			this.SendPropertyChanging();
			entity.UserAccount = null;
		}
	}

	[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.LichKham")]
	public partial class LichKham : INotifyPropertyChanging, INotifyPropertyChanged
	{

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

		private int _ID;

		private System.Nullable<int> _Info;

		private string _Username;

		private string _Ten;

		private System.Nullable<System.DateTime> _NgayDat;

		private System.Nullable<System.DateTime> _NgayHen;

		private EntityRef<ThongTin> _ThongTin;

		private EntityRef<UserAccount> _UserAccount;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnIDChanging(int value);
		partial void OnIDChanged();
		partial void OnInfoChanging(System.Nullable<int> value);
		partial void OnInfoChanged();
		partial void OnUsernameChanging(string value);
		partial void OnUsernameChanged();
		partial void OnTenChanging(string value);
		partial void OnTenChanged();
		partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
		partial void OnNgayDatChanged();
		partial void OnNgayHenChanging(System.Nullable<System.DateTime> value);
		partial void OnNgayHenChanged();
		#endregion

		public LichKham()
		{
			this._ThongTin = default(EntityRef<ThongTin>);
			this._UserAccount = default(EntityRef<UserAccount>);
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
		[DisplayName("Mã")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Info", DbType = "Int")]
		[DisplayName("Mã thông tin")]
		public System.Nullable<int> Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					if (this._ThongTin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(20)")]
		[DisplayName("Tên đăng nhập")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					if (this._UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ten", DbType = "NVarChar(50)")]
		[DisplayName("Tên khách hàng")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NgayDat", DbType = "Date")]
		[Display(Name = "Ngày đặt")]
		[DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NgayHen", DbType = "Date")]
		[Display(Name = "Ngày hẹn")]
		[DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
		public System.Nullable<System.DateTime> NgayHen
		{
			get
			{
				return this._NgayHen;
			}
			set
			{
				if ((this._NgayHen != value))
				{
					this.OnNgayHenChanging(value);
					this.SendPropertyChanging();
					this._NgayHen = value;
					this.SendPropertyChanged("NgayHen");
					this.OnNgayHenChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ThongTin_LichKham", Storage = "_ThongTin", ThisKey = "Info", OtherKey = "ID", IsForeignKey = true)]
		public ThongTin ThongTin
		{
			get
			{
				return this._ThongTin.Entity;
			}
			set
			{
				ThongTin previousValue = this._ThongTin.Entity;
				if (((previousValue != value)
							|| (this._ThongTin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTin.Entity = null;
						previousValue.LichKhams.Remove(this);
					}
					this._ThongTin.Entity = value;
					if ((value != null))
					{
						value.LichKhams.Add(this);
						this._Info = value.ID;
					}
					else
					{
						this._Info = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTin");
				}
			}
		}

		[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "UserAccount_LichKham", Storage = "_UserAccount", ThisKey = "Username", OtherKey = "Username", IsForeignKey = true, DeleteRule = "CASCADE")]
		public UserAccount UserAccount
		{
			get
			{
				return this._UserAccount.Entity;
			}
			set
			{
				UserAccount previousValue = this._UserAccount.Entity;
				if (((previousValue != value)
							|| (this._UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAccount.Entity = null;
						previousValue.LichKhams.Remove(this);
					}
					this._UserAccount.Entity = value;
					if ((value != null))
					{
						value.LichKhams.Add(this);
						this._Username = value.Username;
					}
					else
					{
						this._Username = default(string);
					}
					this.SendPropertyChanged("UserAccount");
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;

		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}

		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}

	public partial class SP_XSINFOResult
	{

		private int _ID;

		public SP_XSINFOResult()
		{
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
		[DisplayName("Mã")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}

	public partial class SP_ChuanDoanResult
	{

		private int _ID;

		private System.Nullable<decimal> _ChiPhi;

		private string _Ten;

		public SP_ChuanDoanResult()
		{
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
		[DisplayName("Mã")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ChiPhi", DbType = "Money")]
		[DisplayName("Chi phí")]
		[DisplayFormat(DataFormatString = "{0:C0}")]
		public System.Nullable<decimal> ChiPhi
		{
			get
			{
				return this._ChiPhi;
			}
			set
			{
				if ((this._ChiPhi != value))
				{
					this._ChiPhi = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ten", DbType = "NVarChar(100)")]
		[DisplayName("Tên bệnh")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this._Ten = value;
				}
			}
		}
	}

	public partial class SP_DSChuanDoanResult
	{

		private int _ID;

		private string _Ten;

		private System.Nullable<decimal> _ChiPhi;

		private string _UserName;

		private System.Nullable<System.DateTime> _Ngay;

		public SP_DSChuanDoanResult()
		{
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
		[DisplayName("Mã")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ten", DbType = "NVarChar(100)")]
		[DisplayName("Tên bệnh")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this._Ten = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ChiPhi", DbType = "Money")]
		[DisplayName("Chi phí")]
		[DisplayFormat(DataFormatString = "{0:C0}")]
		public System.Nullable<decimal> ChiPhi
		{
			get
			{
				return this._ChiPhi;
			}
			set
			{
				if ((this._ChiPhi != value))
				{
					this._ChiPhi = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserName", DbType = "VarChar(20)")]
		[DisplayName("Tên đăng nhập")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ngay", DbType = "Date")]
		[DisplayName("Ngày chuẩn đoán")]
		[DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this._Ngay = value;
				}
			}
		}
	}

	public partial class SP_LoginResult
	{

		private string _Username;

		private string _Password;

		private System.Nullable<bool> _Admin;

		public SP_LoginResult()
		{
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
		[DisplayName("Tên đăng nhập")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Password", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
		[DisplayName("Mật khẩu")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Admin", DbType = "Bit")]
		[DisplayName("Quyền")]
		public System.Nullable<bool> Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this._Admin = value;
				}
			}
		}
	}

	public partial class SP_TCBenhResult
	{

		private int _ID;

		private string _Ten;

		public SP_TCBenhResult()
		{
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "Int NOT NULL")]
		[DisplayName("Mã")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ten", DbType = "NVarChar(50)")]
		[DisplayName("Tên triệu chứng")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this._Ten = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
